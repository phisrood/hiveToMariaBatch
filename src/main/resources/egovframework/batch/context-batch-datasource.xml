<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
			http://www.springframework.org/schema/jdbc  http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd">

	<context:annotation-config />
	
	<bean id="egov.propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:/egovframework/batch/properties/globals.properties</value>
            </list>
        </property>
    </bean>
	
	<!-- DataSource -->
	<alias name="dataSource-hive" alias="hive.dataSource"/>
	<alias name="dataSource-maria" alias="maria.dataSource"/>
    <alias name="dataSource-mysql" alias="mysql.dataSource"/>
    
	<!-- MySQL -->
	
	<bean id="dataSource-mysql" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${Globals.DriverClassName}"/>
		<property name="url" value="${Globals.Url}" />
		<property name="username" value="${Globals.UserName}"/>
		<property name="password" value="${Globals.Password}"/>
	</bean>
	
	 <bean id="dataSource-maria" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${Globals.DriverClassName2}"/>
		<property name="url" value="${Globals.Url2}" />
		<property name="username" value="${Globals.UserName2}"/>
		<property name="password" value="${Globals.Password2}"/>
	</bean>
	
	<bean id="dataSource-hive" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	    <property name="driverClassName" value="org.apache.hive.jdbc.HiveDriver"/>
	    <property name="url" value="jdbc:hive2://121.66.185.30:10000/employees;"/>
	    <property name="username" value="root" />
	    <property name="password" value="kcnet00!@#$" />
	</bean>
    
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mysql.dataSource" />
	</bean>

	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" />

	<bean id="customEditorConfigurer" class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<property name="customEditors">
			<map>
				<entry key="int[]" value="org.springframework.batch.support.IntArrayPropertyEditor" />
			</map>
		</property>
	</bean>
	
	<context:component-scan base-package="egovframework.example"></context:component-scan>
	
	<bean id="mariaDAO" class="egovframework.example.bat.domain.trade.MariaDAO">
    	<!-- @Autowired: id가 dataSource(ref 값)인 bean을 찾아 OffersDao의 setDataSource에 주입 -->
    	<property name="dataSource" ref="maria.dataSource" />
	</bean>
	
</beans>
